import pandas as pd
from mage_files.common_transformations import *

if "transformer" not in globals():
    from mage_ai.data_preparation.decorators import transformer
if "test" not in globals():
    from mage_ai.data_preparation.decorators import test


@transformer
def transform(data, *args, **kwargs):
    """
    Template code for a transformer block.

    Add more parameters to this function if this block has multiple parent blocks.
    There should be one parameter for each output variable from each parent block.

    Args:
        data: The output from the upstream parent block
        args: The output from any additional upstream blocks (if applicable)

    Returns:
        Anything (e.g. data frame, dictionary, array, int, str, etc.)
    """
    # Specify your transformation logic here
    columns_dtypes = {
        "Index Name": "str",
        "Index Date": "datetime64[ns]",
        "Open Index Value": "float64",
        "High Index Value": "float64",
        "Low Index Value": "float64",
        "Closing Index Value": "float64",
        "Points Change": "float64",
        "Change(%)": "float64",
        "Volume": "Int64",
        "Turnover (Rs. Cr.)": "str",
        "P/E": "str",
        "P/B": "str",
        "Div Yield": "str",
    }
    for col, data_type in columns_dtypes.items():
        if data_type in ("float64", "Int64"):
            data[col] = str_to_numeric(data, col, data_type)
    data = data.astype(dtype=columns_dtypes)

    old_columns = list(data.columns.values)
    new_columns = [toSnakeCase(column) for column in old_columns]
    data.columns = new_columns

    return data


@test
def test_output(output, *args) -> None:
    """
    Template code for testing the output of the block.
    """
    assert output is not None, "The output is undefined"
